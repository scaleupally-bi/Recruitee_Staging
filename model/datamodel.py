from sqlalchemy import Column,Integer,String,Double,Float,DateTime,Date,NVARCHAR,BigInteger
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class CadidateModel(Base):
        __tablename__ = 'candidate'    
        local_id = Column(Integer, primary_key=True)
        candidate_id  = Column(Integer)
        name= Column(NVARCHAR)
        emails =Column(NVARCHAR)
        phones = Column(NVARCHAR)
        example= Column(NVARCHAR(10))
        followed = Column(NVARCHAR(10))
        has_avatar =Column(NVARCHAR(10))
        pending_result_request = Column(NVARCHAR(10))
        photo_thumb_url = Column(NVARCHAR(10))
        positive_ratings = Column(Integer)
        rating_visible = Column(NVARCHAR(10))
        ratings_count =  Column(Integer)
        referrer  =Column(NVARCHAR(255))
        source   = Column(NVARCHAR(100))
        sources =Column(NVARCHAR)
        tasks_count = Column(Integer)
        unread_notifications =  Column(NVARCHAR(10))
        upcoming_event =  Column(NVARCHAR(10))
        qualified = Column(NVARCHAR(20))
        disqualified = Column(NVARCHAR(20))
        country = Column(NVARCHAR(255))
        updated_at  = Column(NVARCHAR(10))
        viewed   = Column(NVARCHAR(10))
        created_at = Column(NVARCHAR(10))
        country = Column(NVARCHAR(255))
        seniority = Column(NVARCHAR(255))
        deleted = Column(NVARCHAR(20))

class PlacementModel(Base):
        __tablename__ = 'placement'  
        local_id = Column(Integer,primary_key=True)
        placement_id = Column(Integer)
        candidate_id = Column(Integer)
        created_at = Column(DateTime)
        department_id = Column(Integer)
        department_name = Column(String(255))
        disqualify_kind = Column(String(255))
        disqualify_reason = Column(String)
        hired_at = Column(DateTime)
        hired_by_id = Column(Integer)
        hired_in_other_placement = Column(String(10))
        hired_in_this_placement = Column(String(10))
        job_starts_at = Column(DateTime)
        language_code = Column(String(5))
        language_name = Column(String(200))
        language_native_name = Column(String(200))
        offer_id = Column(Integer)
        overdue_at = Column(DateTime)
        overdue_diff = Column(Integer)
        position = Column(Integer)
        positive_ratings = Column(Integer)
        rating_visible = Column(String(10))
        # ratings = Column(String)
        stage_id = Column(Integer)
        updated_at = Column(DateTime)      

class DepartmentModel(Base):
        __tablename__ ='department'
        local_id = Column(Integer,primary_key=True)
        department_id = Column(Integer)
        name = Column(Integer)
        offerscount = Column(Integer)
        status = Column(String(255))

class offersModel(Base):
        __tablename__ = 'offers'
        local_offer_id =Column(Integer,primary_key=True)
        offer_id = Column(Integer)
        enabled_for_referrals =Column(String(20))
        guid = Column(Integer)
        example = Column(String(20))
        pipeline =Column(String(20))
        city =Column(String(255))
        issues_is_required_data_missing =Column(String(20))
        issues_is_requisition_missing =Column(String(20))
        status =Column(String(255))
        job_scheduler =Column(String(255))
        remote =Column(String(20))
        shared_openings_count =Column(Integer)
        hiring_manager_id =Column(Integer)
        title=Column(String(255))
        careers_url =Column(String)
        recruiter_id =Column(Integer)
        followed =Column(String(255))
        offer_tags =Column(String)
        description =Column(String)
        slug =Column(String(255))
        employment_type =Column(String(255))
        location =Column(String(255))
        enabled_languages_code =Column(String(10))
        enabled_languages_name =Column(String(255))
        enabled_languages_native_name =Column(String(10))
        kind =Column(String(255))
        eeo_settings =Column(String(255))
        requirements =Column(String(255))
        position =Column(Integer)
        mailbox_email =Column(String(255))
        requisitions_id =Column(Integer)
        requisitions_status =Column(String(100))
        requisitions_title =Column(String(255))
        state_name =Column(String(100))
        disqualified_candidates_count =Column(Integer)
        pipeline_template_id =Column(Integer)
        number_of_openings =Column(Integer)
        closed_at =Column(DateTime)
        country_code =Column(String(100))
        candidates_count =Column(Integer)
        department_id =Column(Integer)
        url =Column(String(255))
        postal_code =Column(String(100))
        department =Column(String(255))
        street =Column(String(100))
        has_active_campaign =Column(String(20))
        adminapp_url =Column(String(255))
        hired_candidates_without_openings_count =Column(Integer)
        lang_code =Column(String(100))
        state_code =Column(String(20))
        hired_candidates_count =Column(Integer)
        published_at =Column(DateTime)
        created_at=Column(DateTime)
        updated_at=Column(DateTime)

class followersModel(Base):
        __tablename__ ='followers'
        local_followers_id = Column(Integer,primary_key=True)
        followers_id  = Column(Integer)
        offer_id_fk = Column(Integer)
        email   = Column(String(255))
        first_name   = Column(String(255))
        last_name   = Column(String(255))
        has_avatar   = Column(String(20))
        initials   = Column(String(20))
        photo_normal_url   = Column(String)
        photo_thumb_url   = Column(String)
        time_format24 =   Column(String(20))
        timezone    = Column(String(100))

class pipelinetemplatemodel(Base):
        __tablename__='pipeline_template'
        local_pipeline_template_id = Column(Integer,primary_key=True)
        pipeline_template_id = Column(Integer)
        offer_id_fk = Column(Integer)
        category = Column(String(255))
        custom = Column(String(20))
        position = Column(String(255))
        requires_adjustment = Column(String(20))
        default = Column(String(255))
        title = Column(String(255))

class stage_model(Base):
        __tablename__ ='stage'
        local_stage_id = Column(Integer,primary_key=True)
        stage_id = Column(Integer)
        pipeline_template_id_fk = Column(Integer)
        action_templates = Column(String(255))
        category = Column(String(255))
        fair_evaluations_enabled = Column(String(20))
        group = Column(String(255))
        locked = Column(String(20))
        name = Column(String(255))
        placements_count = Column(Integer)
        position = Column(Integer)
        time_limit = Column(Float)

class log_model(Base):
        __tablename__ = 'logs'
        log_id = Column(Integer,primary_key=True)
        log_name = Column(String)
        log_start = Column(DateTime)
        start_date = Column(DateTime)
        end_date = Column(DateTime)
        status = Column(String(20))
        description = Column(String)

class jobs_model(Base):
        __tablename__ ='jobs'
        local_job_id = Column(Integer, primary_key=True)
        jobs_id = Column(Integer)
        has_avatar = Column(String(20))
        initials = Column(String(50))
        photo_thumb_url = Column(String)
        positive_ratings = Column(Float)
        rating_visible = Column(String(20))
        sources_id = Column(Integer)
        sources_name = Column(String(100))
        last_activity_at = Column(DateTime)
        created_at = Column(DateTime)

class tags_model(Base):
        __tablename__ = 'tags'
        local_tags_id = Column(Integer,primary_key=True)
        tags_id = Column(Integer)
        name = Column(String(255))
        
class activities_model(Base):
        __tablename__ = 'activity_temp'
        local_activity_id = Column(Integer,primary_key=True)
        activity_id = Column(Integer)
        candidate_id = Column(Integer)
        offer_id = Column(Integer)
        initials = Column(Integer)
        event = Column(Integer)
        message_html = Column(String)
        # note = Column(String)
        created_at= Column(DateTime)

class visit_model(Base):
        __tablename__ = 'visit'
        local_visit_id = Column(Integer,primary_key=True)
        visit_id = Column(String(255))
        bounced= Column(String(20))
        browser= Column(String(255))
        date= Column(DateTime)
        device = Column(String(255))
        duration= Column(String(20))
        entry_page = Column(String)
        exit_page = Column(String)
        operating_system = Column(String(255))
        referrer_url = Column(String(255))
        source = Column(String(255))
        utm_campaign = Column(String(255))
        utm_content = Column(String(255))
        utm_medium = Column(String(255))
        utm_source = Column(String(255))
        utm_term = Column(String(255))